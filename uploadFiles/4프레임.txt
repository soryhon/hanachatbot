4프레임에 '5.참고 탬플릿 보기' 영역 추가해.
아래의 예시화면으로 구성하자

예시화면

              ------------------------------------------------
 1프래임. :   github 정보 저장  | OpenAI 저장
              ------------------------------------------------
2프레임 :                    2, 파일 업로드
              ------------------------------------------------
3프레임 :  작성 보고서 요청사항             | [실행]버튼
               [요청사항 리스트 영역]          |
             [행추가]/[행삭제]/[새로고침]     |
             --------------------------------------------------
4프레임 :   5.참고 탬플릿 보기   |  4. 결과 보고서
                [파일 업로드]         | [전달하는 프롬프트]
                [탬플릿 리스트선택] | [응답 출력 text_area]
                [저장]                   | [응답 출력 html]
                [탬플릿 파일 정보]   | 
                [템플릿 미리보기]   | 
             --------------------------------------------------

4프레임 안에 5.참고 탬플릿 보기과 4. 결과 보고서가 가로로 이어서 구성하고 각 가로길이 50%로 설정한다.
5.참고 탬플릿 보기 객체 정의한다.

[파일업로드]는 github 정보 저장 전에는 동작하지 않고 정보 저장 된 후 github 저장소의 templateFiles 폴더에 업로드해야한다.
github 저장소의 templateFiles 폴더 존재여부를 확인하고 없을 경우 templateFiles 폴더 생성하고 업로드 한다.
업로드가 가능한 파일은 이미지 파일, html파일, pdf파일, word파일, 엑셀파일로 제한한다

[탬플릿 리스트 선택]은 github 정보 저장 전에는 동작하지 않고 정보 저장 된후 github 저장소의 templateFiles 폴더 내 파일리스트 가져온다.
선택하기 전에는 '파일을 선택하세요.'라고 문구를 표시하고 파일을 선택해서 파일의 URL 정보와 파일의 상대 경로정보 2개 데이터를 가져온다.

[저장]은 버튼이고 버튼 클릭시 [탬플릿 리스트 선택]에서 파일 선택여부 확템플릿 파일정보]인하고 안되었을경우 '파일을 선택하세요.' 메시지를 표시한다.
선택 파일이 있는경우 선택한 파일의 상대 경로 정보를 [템플릿 파일정보]에 데이터를 입력하고 선택한 파일의 URL정보를 [탬플릿 미리보기]에 입력한다.

[템플릿 파일정보]는 [저장] 버튼으로 입력받은 데이터를 input 객체로 보여주기만 하고 입력은 할수 없다.

 [템플릿 미리보기]는 [저장] 버튼으로 입력받은 URL 데이터를 html 형식을 보여주는 객체로 구성한다.
  세로 길이는 50%로 설정하고 스크롤바를 추가한다.
이미지파일, html파일, pdf파일을 html 태그 사용하여 화면에 출력하고
엑셀파일과 word파일은 템플릿 파일정보]의 파일 상대 경로 정보로 파일 데이터를 가져오고 추출한 데이터를 HTML 형식을 변환하여 출력해야 한다.
